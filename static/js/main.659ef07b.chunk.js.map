{"version":3,"sources":["zonky-api.ts","constants.ts","utils.ts","rating-row.tsx","header.tsx","result-row.tsx","help-row.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["cancelRequest","RATING_CONFIG","type","bcgColor","borderColor","calculateAverageAmount","loans","reduce","currentSum","loan","amount","length","getSampleSize","sampleSize","URL","window","location","href","searchParams","get","parseInt","getLoans","_ref2","Object","asyncToGenerator","regenerator_default","a","mark","_callee","_ref","chosenRating","wrap","_context","prev","next","abrupt","Axios","concat","JSON","stringify","cancelToken","CancelToken","c","headers","x-size","x-order","stop","_x","apply","this","arguments","StyledRatingRow","styled","div","_templateObject","StyledRatingField","_templateObject2","active","_ref3","_ref4","_ref5","RatingRow","_ref6","toggleRating","ratings","react_default","createElement","map","rating","includes","key","onClick","StyledHeader","h1","header_templateObject","Header","react","StyledResultRow","result_row_templateObject","ResultRow","loadingError","loadingLoans","averageAmount","Intl","NumberFormat","style","currency","format","Math","round","StyledHelperRow","p","help_row_templateObject","HelperRow","App","_useState","useState","_useState2","slicedToArray","setRatings","_useState3","_useState4","setAverageAmount","_useState5","_useState6","setLoadingLoans","_useState7","_useState8","setLoadingError","fetchLoans","response","sent","data","t0","isCancel","useEffect","header_Header","filter","currentRating","toConsumableArray","result_row_ResultRow","help_row_HelperRow","Boolean","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.659ef07b.chunk.js","sourcesContent":["import Axios, { Canceler } from \"axios\";\nimport { API_DOMAIN } from \"./constants\";\nimport { getSampleSize } from \"./utils\";\n\n// Using Axios with request cancellation, since AbortController used in fetch is not supported widely\nexport let cancelRequest: Canceler | null;\n\nexport const getLoans = async ({\n  chosenRating\n}: {\n  chosenRating: string[];\n}) => {\n  cancelRequest = null;\n\n  return Axios.get(\n    `${API_DOMAIN}/loans/marketplace?rating__in=${JSON.stringify(\n      chosenRating\n    )}&fields=amount%2Cid%2Crating`,\n    {\n      cancelToken: new Axios.CancelToken(function executor(c) {\n        cancelRequest = c;\n      }),\n      headers: {\n        \"x-size\": getSampleSize(),\n        \"x-order\": \"-datePublished\"\n      }\n    }\n  );\n};\n","export const API_DOMAIN = \"https://api.zonky.cz\";\n\nexport const SAMPLE_SIZE_DEFAULT = 1000;\n\nexport const RATING_CONFIG = [\n  { type: \"AAAAA\", bcgColor: \"#8b59be\", borderColor: \"#7240a4\" },\n  { type: \"AAAA\", bcgColor: \"#596abe\", borderColor: \"#4051a4\" },\n  { type: \"AAA\", bcgColor: \"#599ebe\", borderColor: \"#4084a4\" },\n  { type: \"AA\", bcgColor: \"#67cd75\", borderColor: \"#41c052\" },\n  { type: \"A\", bcgColor: \"#cebe5a\", borderColor: \"#bdab38\" },\n  { type: \"B\", bcgColor: \"#d7954b\", borderColor: \"#d7954b\" },\n  { type: \"C\", bcgColor: \"#e75637\", borderColor: \"#d23a19\" },\n  { type: \"D\", bcgColor: \"#d12f2f\", borderColor: \"#a82525\" }\n];\n","import { ILoanPartial } from \"./types\";\nimport { SAMPLE_SIZE_DEFAULT } from \"./constants\";\n\nexport const calculateAverageAmount = (loans: ILoanPartial[]): number => {\n  const sum = loans.reduce((currentSum, loan) => {\n    return currentSum + loan.amount;\n  }, 0);\n  return sum / loans.length;\n};\n\nexport const getSampleSize = (): number => {\n  const url = new URL(window.location.href);\n  const sampleSize = url.searchParams.get(\"sample_size\") || \"\";\n  const sampleSizeNumber = parseInt(sampleSize, 10);\n\n  return sampleSizeNumber || SAMPLE_SIZE_DEFAULT;\n};\n","import { RATING_CONFIG } from \"./constants\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledRatingRow = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n`;\nconst StyledRatingField = styled.div<{\n  bcgColor: string;\n  borderColor: string;\n  active: boolean;\n}>`\n  margin-top: 8px;\n  display: inline-block;\n  padding: 8px 0;\n  min-width: 56px;\n  line-height: 14px;\n  font-size: 12px;\n  font-weight: 700;\n  text-align: center;\n  background-color: ${({ active, bcgColor }) => (active ? bcgColor : \"#fff\")};\n  color: ${({ active, bcgColor }) => (active ? \"#fff\" : bcgColor)};\n  border: 1px solid\n    ${({ active, borderColor }) => (active ? borderColor : \"#e7e7e7\")};\n  &:hover {\n    cursor: pointer;\n    background-color: ${({ bcgColor }) => bcgColor};\n    border: 1px solid ${({ borderColor }) => borderColor};\n    color: #fff;\n  }\n`;\n\nexport function RatingRow({\n  toggleRating,\n  ratings\n}: {\n  toggleRating: (rating: string) => void;\n  ratings: string[];\n}) {\n  return (\n    <StyledRatingRow>\n      {RATING_CONFIG.map(rating => (\n        <StyledRatingField\n          active={ratings.includes(rating.type)}\n          bcgColor={rating.bcgColor}\n          borderColor={rating.borderColor}\n          key={rating.type}\n          onClick={() => toggleRating(rating.type)}\n        >\n          {rating.type}\n        </StyledRatingField>\n      ))}\n    </StyledRatingRow>\n  );\n}\n","import * as React from \"react\";\nimport styled from \"styled-components\";\nimport { getSampleSize } from \"./utils\";\n\nconst StyledHeader = styled.h1`\n  font-size: 32px;\n  font-weight: 400;\n  text-align: center;\n  color: #37b1bf;\n`;\nexport const Header = () => (\n  <StyledHeader>\n    Kalkulačka průměrné výše {getSampleSize()} půjček\n  </StyledHeader>\n);\n","import * as React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledResultRow = styled.div`\n  text-align: center;\n  font-size: 24px;\n`;\nexport const ResultRow = ({\n  loadingError,\n  loadingLoans,\n  averageAmount\n}: {\n  loadingError: string;\n  loadingLoans: boolean;\n  averageAmount: number | null;\n}) => (\n  <StyledResultRow>\n    <p>{loadingError}</p>\n    <p>\n      {loadingLoans\n        ? \"Načítání...\"\n        : `${\n            averageAmount\n              ? `Průměrná výše půjček je ${new Intl.NumberFormat(\"cs-CZ\", {\n                  style: \"currency\",\n                  currency: \"CZK\"\n                }).format(Math.round(averageAmount * 100) / 100)}.`\n              : `Vyberte rating`\n          }`}\n    </p>\n  </StyledResultRow>\n);\n","import styled from \"styled-components\";\nimport * as React from \"react\";\n\nconst StyledHelperRow = styled.p`\n  text-align: center;\n  font-size: 10px;\n`;\n\nexport const HelperRow = () => (\n  <StyledHelperRow>\n    *Pro změnu velikosti vzorku můžete použít ?sample_size url parametr.\n  </StyledHelperRow>\n);\n","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { cancelRequest, getLoans } from \"./zonky-api\";\nimport { calculateAverageAmount } from \"./utils\";\nimport Axios from \"axios\";\nimport { RatingRow } from \"./rating-row\";\nimport { Header } from \"./header\";\nimport { ResultRow } from \"./result-row\";\nimport { HelperRow } from \"./help-row\";\n\nfunction App() {\n  const [ratings, setRatings] = useState<string[]>([]);\n  const [averageAmount, setAverageAmount] = useState<number | null>(null);\n  const [loadingLoans, setLoadingLoans] = useState<boolean>(false);\n  const [loadingError, setLoadingError] = useState<string>(\"\");\n\n  const fetchLoans = async (chosenRating: string[]) => {\n    try {\n      if (cancelRequest) {\n        cancelRequest();\n      }\n      if (chosenRating.length === 0) {\n        setAverageAmount(null);\n        setLoadingLoans(false);\n        return;\n      }\n      setLoadingLoans(true);\n      const response = await getLoans({ chosenRating });\n      setAverageAmount(calculateAverageAmount(response.data));\n      setLoadingError(\"\");\n      setLoadingLoans(false);\n    } catch (error) {\n      if (!Axios.isCancel(error)) {\n        setLoadingError(\"Nic jsme nenašli.\");\n        setLoadingLoans(false);\n      }\n    }\n  };\n\n  useEffect(() => {\n    fetchLoans(ratings);\n  }, [ratings]);\n\n  const toggleRating = (rating: string) => {\n    if (ratings.includes(rating)) {\n      setRatings(\n        ratings.filter(currentRating => {\n          return rating !== currentRating;\n        })\n      );\n    } else {\n      setRatings([...ratings, rating]);\n    }\n  };\n\n  return (\n    <div>\n      <Header />\n      <RatingRow ratings={ratings} toggleRating={toggleRating} />\n      <ResultRow\n        averageAmount={averageAmount}\n        loadingError={loadingError}\n        loadingLoans={loadingLoans}\n      />\n      <HelperRow />\n    </div>\n  );\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}